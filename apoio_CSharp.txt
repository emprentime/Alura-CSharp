CURSO DE C# PARTE 1: PRIMEIROS PASSOS
INSTRUTOR(A): GUILHERME MATHEUS COSTA

Toda aplicação .NET é escrita em uma linguagem compilada para o código intermediário MSIL (Microsoft intermediate language);

O .NET Framework é uma biblioteca utilizada pelas aplicações .NET;

Uma aplicação .NET é compilada para o MSIL;

O código MSIL é executado pela máquina virtual do .NET, a CLR (common language runtime);

O just-in-time compiler é uma parte da CLR que transforma MSIL em código de máquina, apenas em tempo de execução.


SOBRE A COMPILAÇÃO E EXECUÇÃO:

1 - Durante a compilação acontece uma verificação sintática do código fonte.

2 - Na compilação e execução podem aparecer erros.

3 - Quando executamos o programa compilado, a CLR lê e executa o código MSIL gerado.

4 - O compilador gera o MSIL caso não tenha nenhum erro sintático no código fonte.

Podemos programar em C# utilizando editores de textos e IDEs.

Um IDE é um ambiente integrado de desenvolvimento que centraliza em um único lugar: compilador da linguagem utilizada, editor de texto, documentação, banco de dados e tudo que gira em torno da criação de aplicações.

Por esta razão, desenvolver em IDE é bastante produtivo.

OPERAÇÕES ENTRE NÚMEROS:

Aprendemos que é possível fazer operações entre números. Podemos até fazer operações aritméticas com variáveis de tipos diferentes, como multiplicar um inteiro por um número de ponto flutuante (int e double).

O tipo int (inteiro) suporta um número que vai de -2 elevado a 31 até 2 elevado a 31.
O int ocupa 32 bits na memória do computador.

Se quisermos guardar em uma variável a idade do universo, que são 13 bilhões de anos, que ultrapassa o limite do tipo int, o compilador vai indicar um erro.

Não podemos guardar esse valor elevado em uma variável do tipo inteiro, se precisarmos manipular um número como este, teremos que alterar o tipo da variável. No caso, adotaremos uma variável do tipo long, que também trabalha com números inteiros e suporta valores maiores por ter um limite de 64 bits, o dobro do limite do int.

A variável do tipo short é de 16 bits, ou seja, o valor NÃO pode ser MAIOR do que 16 mil. Um valor maior do que esse, o compilador vai apontar um erro.

Para comparar cada tipo primitivo de forma mais clara, a tabela abaixo mostra qual o tamanho de cada um.

TIPO TAMANHO

boolean -- 1 byte
byte    -- 1 byte
short   -- 2 bytes
char    -- 2 bytes
int     -- 4 bytes
float   -- 4 bytes
long    -- 8 bytes
double  -- 8 bytes

INSTRUTOR(A): Guilherme Matheus Costa

DIFERENÇA ENTRE PASSAGEM POR VALOR E PASSAGEM POR REFERÊNCIA:

A definição mais simples e de alto nível que consigo pensar, é:

Na passagem por valor, é passada uma cópia do valor da variável.

Na passagem por referência, é passada uma referência à própria variável.

Isso é verdade independetemente do tipo da variável.

Ou seja, não importa se o tipo de uma variável é primitivo ou complexo, a afirmação acima é sempre verdadeira.

Fonte: https://pt.stackoverflow.com/questions/59437/qual-a-diferen%C3%A7a-entre-passagem-por-valor-e-passagem-por-refer%C3%AAncia
